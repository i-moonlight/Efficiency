// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace back_end.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Efficiency.Models.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Efficiency.Models.Employee", b =>
                {
                    b.Property<int>("RegistrationNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.HasKey("RegistrationNumber");

                    b.HasIndex("CompanyID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialResult", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("ProductSalesResult")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("ID");

                    b.ToTable("FinancialResults");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialResultFinancialService", b =>
                {
                    b.Property<int>("FinancialResultID")
                        .HasColumnType("int");

                    b.Property<int>("FinancialServiceID")
                        .HasColumnType("int");

                    b.Property<decimal>("Result")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("FinancialResultID", "FinancialServiceID");

                    b.HasIndex("FinancialServiceID");

                    b.ToTable("FResultsFServices");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FinancialServices");
                });

            modelBuilder.Entity("Efficiency.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.HasIndex("CompanyID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EmployeeFinancialResult", b =>
                {
                    b.Property<int>("EmployeesRegistrationNumber")
                        .HasColumnType("int");

                    b.Property<int>("FinancialResultsID")
                        .HasColumnType("int");

                    b.HasKey("EmployeesRegistrationNumber", "FinancialResultsID");

                    b.HasIndex("FinancialResultsID");

                    b.ToTable("EmployeeFinancialResult", (string)null);
                });

            modelBuilder.Entity("FinancialResultFinancialService", b =>
                {
                    b.Property<int>("FinancialResultsID")
                        .HasColumnType("int");

                    b.Property<int>("FinancialServicesId")
                        .HasColumnType("int");

                    b.HasKey("FinancialResultsID", "FinancialServicesId");

                    b.HasIndex("FinancialServicesId");

                    b.ToTable("FinancialResultFinancialService");
                });

            modelBuilder.Entity("Efficiency.Models.Employee", b =>
                {
                    b.HasOne("Efficiency.Models.Company", "CompanyReference")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyID");

                    b.Navigation("CompanyReference");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialResultFinancialService", b =>
                {
                    b.HasOne("Efficiency.Models.FinancialResult", "FinancialResult")
                        .WithMany("FinancialResultsFinancialServices")
                        .HasForeignKey("FinancialResultID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Efficiency.Models.FinancialService", "FinancialService")
                        .WithMany("FinancialResultsFinancialServices")
                        .HasForeignKey("FinancialServiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FinancialResult");

                    b.Navigation("FinancialService");
                });

            modelBuilder.Entity("Efficiency.Models.User", b =>
                {
                    b.HasOne("Efficiency.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("EmployeeFinancialResult", b =>
                {
                    b.HasOne("Efficiency.Models.Employee", null)
                        .WithMany()
                        .HasForeignKey("EmployeesRegistrationNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Efficiency.Models.FinancialResult", null)
                        .WithMany()
                        .HasForeignKey("FinancialResultsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinancialResultFinancialService", b =>
                {
                    b.HasOne("Efficiency.Models.FinancialResult", null)
                        .WithMany()
                        .HasForeignKey("FinancialResultsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Efficiency.Models.FinancialService", null)
                        .WithMany()
                        .HasForeignKey("FinancialServicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Efficiency.Models.Company", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialResult", b =>
                {
                    b.Navigation("FinancialResultsFinancialServices");
                });

            modelBuilder.Entity("Efficiency.Models.FinancialService", b =>
                {
                    b.Navigation("FinancialResultsFinancialServices");
                });
#pragma warning restore 612, 618
        }
    }
}
